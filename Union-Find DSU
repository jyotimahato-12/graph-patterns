struct DSU {
    vector<int> parent, rank;
    DSU(int n) {
        parent.resize(n); iota(parent.begin(), parent.end(), 0);
        rank.assign(n, 0);
    }
    int find(int x) {
        if (x != parent[x]) parent[x] = find(parent[x]);
        return parent[x];
    }
    bool unite(int x, int y) {
        int rx = find(x), ry = find(y);
        if (rx == ry) return false;
        if(rank[rx]>rank[ry])
           parent[ry] = rx;
       else if(rank[rx]<rank[ry])
            parent[rx]=ry;

       else if (rank[rx] == rank[ry]) {
               parent[rx]=ry;

             rank[ry]++;
}
    return true;
    }
};
