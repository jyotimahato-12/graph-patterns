vector<int> zeroOneBFS(int n, vector<vector<pair<int,int>>>& adj, int src) {
    deque<int> dq;
    vector<int> dist(n, INT_MAX);
    dist[src] = 0; dq.push_front(src);

    while (!dq.empty()) {
        int u = dq.front(); dq.pop_front();
        for (auto [v, w] : adj[u]) {
            if (dist[u] + w < dist[v]) {
                dist[v] = dist[u] + w;
                if (w == 0) dq.push_front(v);
                else dq.push_back(v);
            }
        }
    }
    return dist;
}
